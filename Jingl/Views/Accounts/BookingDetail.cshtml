@model Jingl.General.Model.Admin.Transaction.BookModel
@{
    ViewData["Title"] = "ActiveWorkspace";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string enddate = "";
    if (Model.Status > 2 && Model.Status <= 4)
    {
        if (Model.Deadline.HasValue)
        {
            enddate = Model.Deadline.Value.ToString("yyyy-MM-ddTHH:mm:ss");
        }

    }

}
<form enctype="multipart/form-data">


    <div id="myHeader">
        <div class="logo-header">
            <div class="coontainer-fluid">
                <div class="col-md-12">
                    <div class="headerTop" style="height: 40px;">

                        @{
                            if (Model.IsEmail == 1)
                            {


                                <div class="setting-profile" style="left: 13px;right: unset;top: 0;position: absolute;">
                                    <a href="@Url.Action("Index","Home")">
                                        <div class="icon-img">
                                            <img src="/template/img/left-arrow.svg" style="width:25px;" alt="">
                                        </div>
                                    </a>
                                </div>
                            }
                            else
                            {

                                <div class="setting-profile" style="left: 13px;right: unset;top: 0;position: absolute;">
                                    <a href="javascript:history.back()">
                                        <div class="icon-img">
                                            <img src="/template/img/left-arrow.svg" style="width:25px;" alt="">
                                        </div>
                                    </a>
                                </div>


                            }
                        }



                        <div class="mx-auto w-100 p-4 text-white text-center" style="padding-top: 7px !important;">
                            <h4 style="color: #fff;font-weight: bold;">Informasi Order</h4>
                        </div>
                        @*<img src="~/template/img/Jing_e 2.png" alt="Alternate Text" />*@

                    </div>


                </div>
            </div>
        </div>
    </div>
    <div class="brhead-activity">
        <div class="ket-workspace col-12">
            <div class="row list-ket-workspace">
                <div class="wd-33 text-center">
                    <input type="hidden" value="@Model.Status" id="CurrentStatus" />

                    <input type="hidden" value="@Model.Id" id="IdBook" />

                    @{
                        if (Model.Status >= 3)
                        {
                            <div class="circle-ket-workspace-done ">
                                <span class="det-ket-project black-clr">
                                    <img src="~/template/img/checklistdone.svg" class="">
                                </span>
                            </div>
                        }
                        else
                        {
                            if (Model.Status < 0)
                            {
                                <div class="circle-ket-workspace">
                                    <span class="det-ket-project black-clr">
                                        <img src="~/template/img/checklistabu.svg" class="">
                                    </span>
                                </div>

                            }
                            else
                            {
                                <div class="circle-ket-workspace">
                                    <span class="det-ket-project black-clr">
                                        <img src="~/template/img/checklist.svg" class="" onclick="javascript:UpdateBookingStatus(@Model.Id,3);return false;">
                                    </span>
                                </div>
                            }

                        }
                    }



                    <p class="black-clr mt10">Project Diterima</p>
                </div>
                <div class="wd-33 text-center">
                    @{
                        if (Model.Status >= 4)
                        {
                            <div class="circle-ket-workspace-done">
                                <span class="det-ket-project black-clr">
                                    <img src="~/template/img/recorddone.svg" class="">
                                </span>
                            </div>
                        }
                        else
                        {
                            <div class="circle-ket-workspace">
                                <span class="det-ket-project black-clr">
                                    <img src="~/template/img/record.svg" class="" onclick="javascript:UpdateBookingStatus(@Model.Id,4);return false;">
                                </span>
                            </div>
                        }
                    }
                    <p class="black-clr mt10">Proses Perekaman</p>
                </div>
                <div class="wd-33 text-center">
                    @{
                        if (Model.Status >= 5)
                        {
                            <div class="circle-ket-workspace-done ">
                                <span class="det-ket-project black-clr">
                                    <img src="~/template/img/sendproses.svg" class="">
                                </span>
                            </div>
                        }
                        else
                        {
                            <div class="circle-ket-workspace">
                                <span class="det-ket-project black-clr">
                                    <img src="~/template/img/send.svg" class="">
                                </span>
                            </div>
                        }
                    }

                    <p class="black-clr mt10">Video Terkirim</p>
                </div>
                @*<div class="wd-20 pd5 text-center">


                        @{
                            if (Model.Status >= 6)
                            {
                                <div class="circle-ket-workspace-done ">
                                    <span class="det-ket-project black-clr">
                                        <img src="~/template/img/ic-completed-blue.png" class="ic-ket-workspace">
                                    </span>
                                </div>
                            }
                            else
                            {
                                <div class="circle-ket-workspace ">
                                    <span class="det-ket-project black-clr">
                                        <img src="~/template/img/ic-completed.png" class="ic-ket-workspace">
                                    </span>
                                </div>
                            }
                        }

                        <p class="black-clr mt10">Project Completed</p>
                    </div>
                    <div class="wd-20 pd5 text-center">


                        @{
                            if (Model.Status >= 7)
                            {
                                <div class="circle-ket-workspace-done ">
                                    <span class="det-ket-project black-clr">
                                        <img src="~/template/img/ic-tab3-active.png" class="ic-ket-workspace">
                                    </span>
                                </div>
                            }
                            else
                            {
                                <div class="circle-ket-workspace ">
                                    <span class="det-ket-project black-clr">
                                        <img src="~/template/img/ic-rate-talent.png" class="ic-ket-workspace">
                                    </span>
                                </div>
                            }
                        }

                        <p class="black-clr mt10">Rate Talent</p>
                    </div>*@
            </div>

        </div>
    </div>
    <!-- begin #top-menu -->
    <!-- begin #top-menu -->
    <!-- end #top-menu -->
    <div class="box-white" style="padding-bottom: 60px;">
        <div class="brtime-booking mt20">

            @{
                if (Model.Status > 2 && Model.Status <= 4)
                {
                    <p>Selesaikan Order Sebelum Waktu Habis</p>
                    <div class="card-countdown ">
                        <div class="countdown " id="my-countdown" data-end-date="@enddate">
                            <span class="days" title="Days">0</span>
                            <span class="hours" title="Hours">0</span>
                            <span class="minutes" title="Minutes">0</span>
                        </div>
                    </div>
                }
            }
        </div>
        @*<div class="header-menu p-t-20">
                <ul class="nav">
                    <li class="nav-item text-center pull-left">
                        @{
                            if (Model.IsEmail == 1)
                            {
                                <a class="nav-link " href="@Url.Action("Index", "Home")">
                                    <div class="icon-img mb4">
                                        <img class="icon-menu" src="/template/img/ic-back-blue.png" alt="Back" title="Back" />
                                    </div>
                                </a>
                            }
                            else
                            {
                                <a class="nav-link " href="javascript:history.back()">
                                    <div class="icon-img mb4">
                                        <img class="icon-menu" src="/template/img/ic-back-blue.png" alt="Back" title="Back" />
                                    </div>
                                </a>
                            }
                        }

                    </li>
                    <li class="nav-item justify-content-center mr-center">
                        @*<h5 class="nav-link -ml54"><b>Nomor Order :</b> @Model.OrderNo</h5>
                        <div class="nav-link -ml40">
                            <h5 class="float-left"><b>Nomor Order :</b> @Model.OrderNo</h5>
                            <input type="hidden" value="@Model.Status" id="CurrentStatus" />
                            <input type="hidden" value="@Model.OrderNo" id="myCopyorder" class="myCopy" readonly>
                            <div class="tooltip tooltip-bott">
                                <i class="fas fa-copy m-l-5" onclick="myCopyorder()" onmouseout="outFuncorder()">
                                    <span class="tooltiptext" id="myTooltiporder">Copy to clipboard</span>
                                </i>
                            </div>
                            <br />
                            <h5 class="text-center">
                                <b>Tanggal Order :</b>
                                @{

                                    if (Model.CreatedDate.HasValue)
                                    {
                                        @Model.CreatedDate.Value.ToString("dd-MM-yyyy")
                                    }
                                }
                            </h5>
                        </div>

                    </li>
                    <li class="nav-item">
                        <a class="nav-link " href="@Url.Action("Support", "Account")">
                            <div class="icon-img mb4">
                                <img class="icon-menu" src="~/template/img/ic-question.png" title="Bantuan" alt="Bantuan" />
                            </div>
                        </a>
                    </li>
                </ul>

            </div>*@


        @*<div class="countdown " id="my-countdown" data-end-date="2019-07-20T19:00:00">
                <span class="days" title="Days">0</span>
                <span class="hours" title="Hours">0</span>
                <span class="minutes" title="Minutes">0</span>
            </div>*@




        @{
            if (Model.Status == 4)
            {
        <div class="col-md-12">
            <div id="brrekam" class="brrekam-booking">
                <button id="rekamVideo" type="button" class="" href="#">
                    <i class="fas fa-video"></i>
                    Rekam Video
                </button>
                <button id="unggahVideo" type="button" class="fileuploader-btn" href="#">
                    <i class="fas fa-upload"></i>
                    Upload Video
                </button>
                <input type="file" class="fileuploader" id="FileVideoUpload" name="file" style="display: none;">
            </div>

            @*<canvas id="compare" width="320" height="240"  />*@
            <div id="recordVideo" class="recordHead">
                <video controls autoplay playsinline style="height: 300px; width: 100%;"></video>
                <i class="fas fa-video btn-start-recording " id="btn-start-recording-img"></i>
            </div>

            <div id="dvProgress" style="width: 100%; min-width: 2em; margin-bottom:5px;">
            </div>
            <div id="uploadVideo"></div>


        </div>



                @*<div class="container mb50">
                        <div class="row">
                            <div class="col-12">
                                <div class="divider-btm-w"></div>
                                <div class="brdetail-booking mt30">
                                    <h1>Detail Order</h1>
                                    <div class="brsub-booking">
                                        <span>Judul Project</span>
                                        <p>@Model.ProjectNm</p>
                                    </div>
                                    <div class="brsub-booking">
                                        <span>Untuk </span>
                                        <p>@Model.To</p>
                                    </div>
                                    <div class="brsub-booking">
                                        <span>Dari </span>
                                        <p>@Model.From</p>
                                    </div>
                                    <div class="brsub-booking">
                                        <span>Pesan </span>
                                        <p>@Model.BriefNeeds</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>*@
                @*<div class="briefdetail m-t-20">
                        <div class="row">
                            <div class="col-12">
                                <h5 class="fw-600">Judul Project</h5>
                                <p>@Model.ProjectNm</p>
                            </div>
                            <div class="col-6">
                                <h5 class="fw-600">Untuk :</h5>
                                <p class="">@Model.To</p>
                            </div>
                            <div class="col-6">
                                <h5 class="fw-600">Dari :</h5>
                                <p class="">@Model.From </p>
                            </div>
                            <div class="col-12">
                                <h5 class="fw-600">Pesan :</h5>
                                <p class="">@Model.BriefNeeds</p>
                            </div>
                        </div>
                    </div>*@


                <hr />

                <center>
                    @*<div id="btnRecord">
                            <button id="btn-start-recording" class="btn btn-blue m-b-10">Mulai Perekaman</button>
                            <button id="btn-stop-recording" class="btn btn-blue m-b-10">Berhenti merekam</button>
                            <button id="btn-record-again" class="btn btn-blue m-b-10">Merekam lagi</button>
                            <hr />

                            <button id="btn-upload-video" class="btn btn-blue">Upload dan kirim Video</button>
                            <div id="container" style="padding:1em 2em;"></div>

                        </div>*@

                </center>

            }
            else if (Model.Status >= 5)
            {
                <div class="col-md-12">
                    <h5>Video</h5>
                    <div class="embed-responsive embed-responsive-4by3 card-img-top">

                        <video width="400" class="pb-video-frame" controls>
                            <source src="@Model.Link" type="video/mp4">

                        </video>



                    </div>
                </div>
            }
        }

        <div class="card-content-tab-menu mt10">
            @{
                if (Model.Status < 7)
                {
                    <div class="container mb20">
                        <div class="row">
                            <div class="col-12">
                                <div class="divider-btm-w"></div>
                                <div class="brdetail-booking mt30">
                                    <h1>Detail Order</h1>
                                    @{
                                        if (Model.Status == 3 || Model.Status < 0)
                                        {
                                            <div class="brdetail-booking mt30">
                                                <div class="brsub-booking">
                                                    <span>Status</span>
                                                    <p>@Model.TransactionStatus</p>
                                                </div>
                                            </div>
                                        }
                                    }

                                    <div class="brsub-booking">
                                        <span>Judul Project</span>
                                        <p>@Model.ProjectNm</p>
                                    </div>
                                    <div class="brsub-booking">
                                        <span>Ucapan Untuk</span>
                                        <p>@Model.To</p>
                                    </div>
                                    <div class="brsub-booking">
                                        <span>Ucapan Dari</span>
                                        <p>@Model.From</p>
                                    </div>
                                    <div class="brsub-booking">
                                        <span>Pesan</span>
                                        <p>@Model.BriefNeeds</p>
                                    </div>

                                    <div class="divider-btm-w m-b-20"></div>

                                    <div class="brsub-booking">
                                        <span>Dipesan Oleh</span>
                                        <p>@Model.From</p>
                                    </div>
                                    <div class="brsub-booking">
                                        <span>Nomor Order</span>
                                        <p> @Model.OrderNo</p>

                                    </div>
                                    <div class="brsub-booking">
                                        <span>Tanggal Order</span>
                                        <p>
                                            @{

                                                if (Model.CreatedDate.HasValue)
                                                {
                                                    @Model.CreatedDate.Value.ToString("dd-MM-yyyy")
                                                }
                                            }
                                        </p>

                                    </div>


                                </div>
                                <div class="brask-booking mt40 mb30">
                                    <p>Ada Pertanyaan? </p>
                                    <p>Hubungi Kami <a href="@Url.Action("Support","Account")">disini</a></p>
                                    @{
                                        if (Model.Status == 3)
                                        {
                                            <button type="button" class="btn brtolak" data-toggle="modal" data-target="#tolakorder">
                                                Tolak Order
                                            </button>
                                        }
                                    }


                                </div>
                                <div class="modal fade" id="tolakorder" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                    <div class="modal-dialog modal-dialog-centered" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="exampleModalLabel">Tolak Order</h5>
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div class="modal-body">
                                                <form>

                                                    <div class="form-group">
                                                        <label for="exampleFormControlTextarea1">Alasan</label>
                                                        <textarea class="form-control" id="TxtReason" rows="5"></textarea>
                                                    </div>
                                                    <button type="button" id="BtnSubmitDecline" onclick="DeclineOrder();" class="btn btn-blue">SUBMIT</button>


                                                </form>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <br />


                            </div>
                        </div>
                    </div>
                }
            }


            @*<div class="row briefdetail m-t-20">

                    <!-- end nav-pills -->
                    <!-- begin tab-content -->
                    <div class="col-6">
                        <h6 class="title-work fw-600">Status :</h6>
                        <p class="">@Model.TransactionStatus</p>
                    </div>
                    <div class="col-6">
                        <h6 class="title-work fw-600">Dipesan oleh :</h6>
                        <p class="">@Model.CustomerName</p>
                    </div>
                    <div class="col-6">
                        <h6 class="title-work fw-600">Email :</h6>
                        <p class="">@Model.Email</p>
                    </div>
                </div>*@
            @*<hr style="border: 0; height: 1px; background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0)); " />*@


            @{
                if (Model.Status >= 7 || Model.Status == 3)
                {
                    <div class="container">
                        <div class="row">
                            <div class="col-12">
                                <div class="brdetail-booking mt30">
                                    <div class="brsub-booking">
                                        <span>Status</span>
                                        <p>@Model.TransactionStatus</p>
                                    </div>
                                    <div class="brsub-booking m-t-20">
                                        <span>Dipesan Oleh</span>
                                        <p>@Model.From</p>
                                    </div>
                                    <h1 class="m-t-25">Detail Order</h1>
                                    <div class="brsub-booking clearfix">
                                        <span class="float-left">Video Fee</span>
                                        <p class="float-right">Rp. <label class="amountlines">@Model.TalentPrice</label></p>
                                    </div>
                                    <div class="brsub-booking clearfix">
                                        <span class="float-left">Fameo Fee</span>
                                        <p class="float-right">Rp <label class="amountlines">@Model.FameoIncome</label></p>
                                    </div>
                                    <div class="brsub-booking clearfix">
                                        <span class="float-left">Dana yg diterima</span>
                                        <p class="float-right">Rp <label class="amountlines">@Model.TalentIncome</label></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                }
            }

            <footer class="page-footer top-shadow footers">



                @{
                    if (Model.Status == 4)
                    {

                        <button id="btn-start-recording" type="button" class="btn btn-blue btn-start-recording" style="display:block">Mulai Perekaman</button>
                        <button id="btn-stop-recording" type="button" class="btn btn-blue btn-stop-recording" style="display:none">Berhenti merekam</button>

                        <button id="SendVideo" type="button" class="btn btn-blue" style="display:block">Kirim Video</button>

                        <div class="brbtn-booking">

                            <button id="btn-record-again" type="button" class="btn-ganti btn w-50 btn-record-again" style="display:none">Ganti Video</button>
                            <button id="btn-upload-video" type="button" class="btn-kirim btn w-50" style="display:none">Kirim Video</button>
                        </div>

                        @*<button id="btn-record-again" class="btn btn-blue btn-record-again " style="display:none">Merekam lagi</button>

                            <button id="btn-upload-video" class="btn btn-blue" style="display:none">Upload dan kirim Video</button>*@
                        <div id="container" style="padding:1em 2em; display:none"></div>

                    }
                    if (Model.Status == 3)
                    {



                        @*<a class="btn btn-blue " asp-controller="Account" asp-action="Support">Bantuan</a>*@
                        <button id="btn-next-record" type="button" class="btn btn-blue " onclick="javascript:UpdateBookingStatus(@Model.Id,4);return false;">Lanjut Merekam</button>

                    }
                    if (Model.Status == 5)
                    {

                        @*<h3>Video Telah Diupload</h3>*@
                        <a id="btn-back" class="btn btn-blue" href="@Url.Action("Profile","Account")">Kembali ke Profile</a>

                    }
                    if (Model.Status >= 7)
                    {
                        <div class="brbtn-fix">
                            <a href="@Url.Action("Profile","Account")" type="button" class="btn-kirim btn-blue">Selesai</a>
                        </div>
                    }

                    @*<div class="brbtn-booking" id="ReRecord" hidden>
                            <button id="btn-record-again" class="btn-ganti btn w-50">Ganti Video</button>
                            <button id="btn-upload-video" class="btn-kirim btn w-50">Kirim Video</button>
                        </div>*@
                }
                <div class="col-3">

                </div>


            </footer>


            <div class="loadingSign" style="display: none">
                <img src="~/template/img/loadingpink.gif" alt="Alternate Text" />
            </div>
        </div>
    </div>




</form>
@section scripts
    {
    <script src="~/js/RecordRTC.js"></script>
    @*<script src="https://cdn.webrtc-experiment.com/RecordRTC.js"></script>*@

    @*   <script src="https://webrtc.github.io/adapter/adapter-latest.js"></script>*@
    @*<script src="https://cdn.webrtc-experiment.com/common.js"></script>*@

    <script type="text/javascript">
        (function (a) { a.fn.progressbarManager = function (h) { if (!a.fn.progressbarManager.GUID) { a.fn.progressbarManager.GUID = 1 } var e = a.extend({ debug: false, initValue: 0, totalValue: 100, style: "primary", animate: false, stripe: false, id: "pbm-bootsrap-progress-" + a.fn.progressbarManager.GUID, barIdPrefix: "pbm-progress-bar-", total: h.totalValue, addDefaultBar: true, data: {}, showValueHandler: function (j) { var k = j.elem.attr("aria-valuenow") + "%"; j.elem.text(k) }, hideValueHandler: function (j) { j.elem.text("") }, onComplete: function () { }, onBarComplete: function () { } }, h); e.total = parseInt(e.total); var i = a(this); function f(k) { var l = this; var o = 1; var r = {}; var n; var p = 0; var q = false; var m = c(k); i.append(m); var n = ""; var j = function () { p = 0; for (var s in r) { p += r[s].totalValuePercent } }; this.setValue = function (w, u) { var t = this.getBar(u); w = parseInt(w); if (t) { if (w > t.totalValue) { b("New Bar value is greater that the totalValue. Setting the bar percentage to full"); w = t.totalValue } var v = g(w, e.total); var s = Math.round(v * 10) / 10; t.elem.attr("aria-valuenow", s); t.currentPercent = v; t.currentPercentRounded = s; t.currentValue = w; t.elem.css("width", Math.round(v) + "%"); if (t.showText) { this.showValue(u) } if (this.isComplete(u)) { e.onBarComplete.call(t) } j(); if (this.isComplete()) { e.onComplete() } } return this }; this.animate = function (t) { var s = this.getBar(t); if (s) { s.elem.addClass("active") } return this }; this.animateRemove = function (t) { var s = this.getBar(t); if (s) { s.elem.removeClass("active") } return this }; this.stripe = function (t) { var s = this.getBar(t); if (s) { s.elem.addClass("progress-bar-striped") } return this }; this.removeStripe = function (t) { var s = this.getBar(t); if (s) { s.elem.removeClass("progress-bar-striped") } return this }; this.style = function (s, u) { var t = this.getBar(u); if (t) { t.elem.removeClass("bg-" + t.style); t.style = s; t.elem.addClass("bg-" + s) } return this }; this.showValue = function (u) { var t = this.getBar(u); if (u === true) { for (var s in r) { s.showText = true; s.showValueHandler(t) } } if (t) { t.showText = true; t.showValueHandler(t) } return this }; this.hideValue = function (u) { var t = this.getBar(u); if (u === true) { for (var s in r) { s.showText = false; s.hideValueHandler(t) } } if (t) { t.showText = false; t.hideValueHandler(t) } return this }; this.isComplete = function (t) { var s = this.getBar(t); return (s && s.currentValue >= s.totalValue) }; this.complete = function (t) { var s = this.getBar(t); if (s) { this.setValue(s.totalValue, t) } return this }; this.completeAll = function () { var s; for (s in r) { l.complete(s) } }; this.addBar = function (B) { var w = a.extend({ initValue: 0, totalValue: 100, style: "primary", animate: false, stripe: false, data: {}, showValueHandler: e.showValueHandler, hideValueHandler: e.hideValueHandler }, B); var s = e.barIdPrefix + o; var x = parseInt(w.initValue) || 0; var y = parseInt(w.totalValue) || (100 - p); var v = g(x, e.total); var t = Math.round(v * 10) / 10; var A = g(y, e.total); var z = Math.round(A * 10) / 10; if ((z + p) > 100) { b("container can not contain the new bar element based on the percentage of its total: " + z); b("Available space in percent is :" + (100 - p)); return true } if (x > y) { t = z } var u = d(s, Math.round(v), w.style, x, y, w.animate, w.stripe); m.append(u); r[s] = { totalValue: y, currentValue: x, init: x, initPercent: v, totalValuePercent: A, totalValuePercentRounded: z, currentPercent: v, currentPercentRounded: t, style: w.style, elem: u, showText: true, id: s, data: w.data, showValueHandler: w.showValueHandler, hideValueHandler: w.hideValueHandler }; w.showValueHandler(r[s]); o++; j(); return s }; this.removeBar = function (t) { var s = this.getBar(t); if (s) { s.elem.remove() } }; this.destroy = function () { m.remove() }; this.getBar = function (s) { var t = s || n; if (r[t]) { return r[t] } b("No progress bar element with id: " + t); return null }; if (e.addDefaultBar) { n = this.addBar(e) } } var c = function (j) { return a("<div></div>", { id: j, "class": "progress" }) }; var d = function (l, p, k, o, q, m, r) { var n = a("<div></div>"); var j = "progress-bar progress-bar-" + k; if (m) { j += " active " } if (r) { j += " progress-bar-striped"; j += " progress-bar-animated"; } n.attr("id", l).attr("role", "progress-bar"); n.attr("aria-valuenow", p).attr("aria-valuemin", o); n.attr("aria-valuemax", q).css({ width: p + "%", "min-width": "2em" }); n.addClass(j); n.append('<span class="sr-only sr-indicator">' + p + "% Complete</span></div>"); return n }; var g = function (k, j) { return 100 - (j - k) / j * 100 }; var b = function (j) { if (e.debug) { console.log("Progress Bar Manager Debug => " + j) } }; a.fn.progressbarManager.GUID++; return new f(e.id) } }(jQuery)); 
        //var video = document.querySelector('video');

        //function captureCamera(callback) {
        //    navigator.mediaDevices.getUserMedia({ audio: true, video: true }).then(function (camera) {
        //        callback(camera);
        //    }).catch(function (error) {
        //        alert('Unable to capture your camera. Please check console logs.');
        //        console.error(error);
        //    });
        //}

        //function stopRecordingCallback() {
        //    video.src = video.srcObject = null;
        //    video.muted = false;
        //    video.volume = 1;
        //    video.src = URL.createObjectURL(recorder.getBlob());

        //    recorder.camera.stop();
        //    recorder.destroy();
        //    recorder = null;
        //}

        //var recorder; // globally accessible

        //document.getElementById('btn-start-recording').onclick = function () {
        //    //this.disabled = true;
        //    captureCamera(function (camera) {
        //        video.muted = true;
        //        video.volume = 0;
        //        video.srcObject = camera;

        //        recorder = RecordRTC(camera, {
        //            type: 'video'
        //        });

        //        recorder.startRecording();

        //        // release camera on stopRecording
        //        recorder.camera = camera;
        //        $(this).hide();
        //        $('#btn-stop-recording').show();

        //        document.getElementById('btn-stop-recording').disabled = false;
        //    });
        //};

        //document.getElementById('btn-stop-recording').onclick = function () {
        //    //this.disabled = true;
        //    $(this).hide();
        //    recorder.stopRecording(stopRecordingCallback);
        //};


         function UpdateBookingStatus(BookingId, BookStatus) {


                var CurrentStatus = $("#CurrentStatus").val();

                var devisitStatus = parseInt(BookStatus) - parseInt(CurrentStatus);

                if (BookStatus == "5" && devisitStatus == 1) {
                    PostBlob(recorder.getBlob(), BookingId, BookStatus);
                }
                else if (devisitStatus == 1 && BookStatus != "5") {
                    var url = "@Url.Action("UpdateBookingStatus", "Booking")";
                    $.ajax({
                        url: url,
                        //cache: false,
                        //traditional: true,
                        type: "POST",
                        data: { BookId: BookingId, status: BookStatus },
                        //contentType: "application/json; charset=utf-8",
                        //async: false,
                        beforeSend:
                            function () {
                                //$("#spinner").show();
                                $(".loadingSign").show();
                            },
                        complete: function () {
                            $(".loadingSign").hide();
                        },
                        success: function (data) {
                            $.gritter.add({
                                title: 'Success !',
                                text: 'Updated Successfully'
                            });
                            location.reload();
                        },

                        error: function (jqXHR, textStatus, errorMessage) {
                            console.log(errorMessage);
                        }
                    });
                }
                else {
                    $.gritter.add({
                        title: 'Warning !',
                        text: 'Warning'
                    });
                }
        }

        function DeclineOrder() {

                     var url = "@Url.Action("DeclineOrder", "Booking")";
                    $.ajax({
                        url: url,
                        //dataType: 'json',
                        //contentType: false,
                        //processData: false,
                        type: "POST",
                        data: { BookId: $("#IdBook").val(), Reason: $("#TxtReason").val()},
                        //contentType: "application/json; charset=utf-8",
                        //async: false,
                        beforeSend: function () {
                            //$("#spinner").show();
                            $(".loadingSign").show();
                        },
                        complete: function () {
                            $(".loadingSign").hide();
                        },
                        success: function (data) {
                            $.gritter.add({
                                title: 'Success !',
                                text: 'Updated Successfully'
                            });
                            location.reload();
                        },

                        error: function (jqXHR, textStatus, errorMessage) {
                            console.log(errorMessage);
                        }
                    });
                }











        $(document).ready(function () {
            var video = document.querySelector('video');

            var recorder;

              document.getElementById('SendVideo').style.display = "none";

                document.getElementById('btn-start-recording').style.display = "none";


             







                @*var CurrentStatus = $("#CurrentStatus").val();

                var devisitStatus = parseInt(BookStatus) - parseInt(CurrentStatus);

                if (devisitStatus == 1) {
                    var url = "@Url.Action("UpdateBookingStatus", "Booking")";
                    $.ajax({
                        url: url,
                        //cache: false,
                        //traditional: true,
                        type: "POST",
                        data: { BookId: BookingId, status: BookStatus },
                        //contentType: "application/json; charset=utf-8",
                        //async: false,
                        beforeSend:
                            function () {

                                //$("#spinner").show();
                            },
                        success: function (data) {
                            $.gritter.add({
                                title: 'Success !',
                                text: 'Updated Successfully'
                            });
                            location.reload();
                        },

                        error: function (jqXHR, textStatus, errorMessage) {
                            console.log(errorMessage);
                        }
                    });
                }
                else {
                    $.gritter.add({
                        title: 'Warning !',
                        text: 'Warning'
                    });
                }*@



            function xhrD(url, data, progress, percentage, callback) {
                $(".loadingSign").show();
                var request = new XMLHttpRequest();
                request.onreadystatechange = function () {
                    if (request.readyState == 4 && request.status == 200) {
                        callback(request.responseText);
                    }
                };

                if (url.indexOf('/RecordRTC/DeleteFile') == -1) {
                    request.upload.onloadstart = function () {
                        percentage.innerHTML = 'Upload started...';
                    };

                    request.upload.onprogress = function (event) {
                        progress.max = event.total;
                        progress.value = event.loaded;
                        percentage.innerHTML = 'Upload Progress ' + Math.round(event.loaded / event.total * 100) + "%";
                    };

                    request.upload.onload = function () {
                        percentage.innerHTML = 'Saved!';
                    };
                }

                request.open('POST', url);
                request.send(data);
            }






            function PostBlob(blob, BookingId, BookStatus) {
                // FormData
                var formData = new FormData();
                formData.append('video-filename', fileName);
                formData.append('video-blob', blob);

                // progress-bar
                var hr = document.createElement('hr');
                container.appendChild(hr);
                var strong = document.createElement('strong');
                strong.id = 'percentage';
                strong.innerHTML = 'Video upload progress: ';
                container.appendChild(strong);
                var progress = document.createElement('progress');
                container.appendChild(progress);




                // POST the Blob using XHR2
                xhr('/Files/UploadVideoFiles', formData, progress, percentage, function (fName) {

                    container.appendChild(document.createElement('hr'));
                    var mediaElement = document.createElement('video');

                    var fileId = parseInt(fName);
                    var url = "@Url.Action("UpdateMaterialSent", "Booking")";
                    $.ajax({
                        url: url,
                        //dataType: 'json',
                        //contentType: false,
                        //processData: false,
                        type: "POST",
                        data: { BookId: BookingId, status: BookStatus, FileId: fileId },
                        //contentType: "application/json; charset=utf-8",
                        //async: false,
                        beforeSend: function () {
                            //$("#spinner").show();
                            $(".loadingSign").show();
                        },
                        complete: function () {
                            $(".loadingSign").hide();
                        },
                        success: function (data) {
                            $.gritter.add({
                                title: 'Success !',
                                text: 'Updated Successfully'
                            });
                            location.reload();
                        },

                        error: function (jqXHR, textStatus, errorMessage) {
                            console.log(errorMessage);
                        }
                    });

                });
              }

              function UpdateMaterialSent(BookingId, BookStatus) {


                var CurrentStatus = $("#CurrentStatus").val();

                var devisitStatus = parseInt(BookStatus) - parseInt(CurrentStatus);

                if (BookStatus == "5" && devisitStatus == 1) {
                    PostBlob(recorder.getBlob(), BookingId, BookStatus);
                }
                else if (devisitStatus == 1 && BookStatus != "5") {
                    var url = "@Url.Action("UpdateBookingStatus", "Booking")";
                    $.ajax({
                        url: url,
                        //cache: false,
                        //traditional: true,
                        type: "POST",
                        data: { BookId: BookingId, status: BookStatus },
                        //contentType: "application/json; charset=utf-8",
                        //async: false,
                        beforeSend: function () {
                            //$("#spinner").show();
                            $(".loadingSign").show();
                        },
                        complete: function () {
                            $(".loadingSign").hide();
                        },
                        success: function (data) {
                            $.gritter.add({
                                title: 'Success !',
                                text: 'Updated Successfully'
                            });
                            location.reload();
                        },

                        error: function (jqXHR, textStatus, errorMessage) {
                            console.log(errorMessage);
                        }
                    });
                }
                else {
                    $.gritter.add({
                        title: 'Warning !',
                        text: 'Warning'
                    });
                }
            }



            function captureCamera(callback) {
                navigator.mediaDevices.getUserMedia({ audio: true, video: true }).then(function (camera) {
                    callback(camera);
                }).catch(function (error) {
                    alert('Unable to capture your camera ');
                    console.error(error);
                });
            }

            function xhr(url, data, progress, percentage, callback) {
                $(".loadingSign").show();
                var request = new XMLHttpRequest();
                request.onreadystatechange = function () {
                    if (request.readyState == 4 && request.status == 200) {
                        callback(request.responseText);
                    }
                };

                if (url.indexOf('/RecordRTC/DeleteFile') == -1) {
                    request.upload.onloadstart = function () {
                        percentage.innerHTML = 'Upload started...';
                    };

                    request.upload.onprogress = function (event) {
                        progress.max = event.total;
                        progress.value = event.loaded;
                        percentage.innerHTML = 'Upload Progress ' + Math.round(event.loaded / event.total * 100) + "%";
                    };

                    request.upload.onload = function () {
                        percentage.innerHTML = 'Saved!';
                    };
                }

                request.open('POST', url);
                request.send(data);
            }



            function stopRecordingCallback() {
                video.src = video.srcObject = null;
                video.muted = false;
                video.volume = 1;
                video.src = URL.createObjectURL(recorder.getBlob());

                recorder.camera.stop();
                fileName = (Math.round(Math.random() * 99999999) + 99999999) + '.webm';
                //recorder.destroy();
                //recorder = null;
            }


            var fileName;

            document.getElementById('btn-stop-recording').style.display="none";
            document.getElementById('btn-record-again').style.display = "none";
            document.getElementById('btn-upload-video').style.display = "none";


            $(".btn-start-recording").click(function (e) {
                if (recorder != null) {
                    recorder.destroy();
                    recorder = null;
                }

                captureCamera(function (camera) {
                    video.muted = true;
                    video.volume = 0;
                    video.srcObject = camera;

                    recorder = RecordRTC(camera, {
                        type: 'video'
                    });

                    recorder.startRecording();

                    // release camera on stopRecording
                    recorder.camera = camera;
                    $('.btn-stop-recording').show();
                    $('.btn-start-recording').hide();

                    //document.getElementById('btn-stop-recording').disabled = false;
                });
            });

            $(".btn-stop-recording").click(function (e) {
                recorder.stopRecording(stopRecordingCallback);
                //recorder.stopRecording();
                document.getElementById('btn-stop-recording').style.display = "none";
                document.getElementById('btn-record-again').style.display = "block";
                document.getElementById('btn-upload-video').style.display = "block";
                document.getElementById('SendVideo').style.display = "none";
            });

            //$(".btn-record-again").click(function (e) {
            //    //recorder.stopRecording(stopRecordingCallback);
            //    document.getElementById('btn-start-recording').style.display = "block";
            //    document.getElementById('btn-record-again').style.display = "none";
            //    document.getElementById('btn-upload-video').style.display = "none";
            //});

            $(".btn-record-again").click(function (e) {
                //recorder.stopRecording(stopRecordingCallback);
                document.getElementById('btn-start-recording').style.display = "block";
                document.getElementById('btn-record-again').style.display = "none";
                document.getElementById('btn-upload-video').style.display = "none";
                document.getElementById('SendVideo').style.display = "none";
            });

            $("#btn-upload-video").click(function (e) {
                //recorder.stopRecording(stopRecordingCallback);
                //$('#btn-start-recording').show();
                //$('#btn-record-again').hide();
                //$('#btn-upload-video').hide();
                UpdateMaterialSent(@Model.Id, 5);
            });





             $("#SendVideo").click(function (e) {

                    var hr = document.createElement('hr');
                    container.appendChild(hr);
                    var strong = document.createElement('strong');
                    strong.id = 'percentage';
                    strong.innerHTML = 'Video upload progress: ';
                    container.appendChild(strong);
                    var progress = document.createElement('progress');
                    container.appendChild(progress);

                    var input = document.getElementById('FileVideoUpload');
                    var files = input.files;
                    var formData = new FormData();

                    for (var i = 0; i != files.length; i++) {
                        formData.append("files", files[i]);
                    }

                    xhrD('/Files/UploadVideoFiles', formData, progress, percentage, function (fName) {
                        var fileId = parseInt(fName);

                        var fileId = parseInt(fName);
                    var url = "@Url.Action("UpdateMaterialSent", "Booking")";
                    $.ajax({
                        url: url,
                        //dataType: 'json',
                        //contentType: false,
                        //processData: false,
                        type: "POST",
                        data: { BookId: $("#IdBook").val() , status: 5, FileId: fileId },
                        //contentType: "application/json; charset=utf-8",
                        //async: false,
                        beforeSend: function () {
                            //$("#spinner").show();
                            $(".loadingSign").show();
                        },
                        complete: function () {
                            $(".loadingSign").hide();
                        },
                        success: function (data) {
                            $.gritter.add({
                                title: 'Success !',
                                text: 'Updated Successfully'
                            });
                            location.reload();
                        },

                        error: function (jqXHR, textStatus, errorMessage) {
                            console.log(errorMessage);
                        }
                    });
                    });



                });



            $("#rekamVideo").click(function (e) {
                document.getElementById('recordVideo').style.display = "block";
                document.getElementById('uploadVideo').style.display = "none";
                document.getElementById('btn-record-again').style.display = "none";
                document.getElementById('btn-upload-video').style.display = "none";
                document.getElementById('btn-stop-recording').style.display = "none";
                document.getElementById('btn-start-recording').style.display = "block";
                document.getElementById('SendVideo').style.display = "none";

                //$('html, body').animate({ scrollTop: $('#recordVideo').offset().top }, 'slow');
               // $('#recordVideo').focus();

                $('html, body').animate({
                    scrollTop: $("#recordVideo").offset().top
                }, 1500);


                if (recorder != null) {
                    recorder.destroy();
                    recorder = null;
                }

            });

            $('.fileuploader-btn').on('click', function () {
                $('.fileuploader').click();
                document.getElementById('recordVideo').style.display = "none";

                document.getElementById('btn-stop-recording').style.display = "none";
                document.getElementById('btn-record-again').style.display = "none";

            });

            // Click above calls the open dialog box
            // Once something is selected the change function will run
            $('.fileuploader').change(function () {
                var sizeInKb = parseFloat($(this).prop("files")['0'].size / 1024).toFixed(2);
                var fileName = $(this).prop("files")['0'].name;
                // Create new FileReader as a variable
                var reader = new FileReader();

                // Onload Function will run after video has loaded
                reader.onload = function (file) {
                    uploadProgress = $('#dvProgress').progressbarManager({
                        totalValue: sizeInKb,
                        initValue: '0kb',
                        animate: true,
                        stripe: true,
                        style: 'primary'
                    });
                    var chunk = 0;
                    var uploading = setInterval(function () {
                        uploadProgress.setValue(chunk);
                        if (uploadProgress.isComplete()) {
                            clearInterval(uploading);
                            uploadProgress.style('success');
                    
                            $(".progress-bar").animate({
                                
                            }, 10000, function () {
                                $(this).closest('.progress').fadeOut(4000);
                            });
                            var fileContent = file.target.result;
                            //$('#uploadVideo').find(':last-child').not(':only-child').remove();
                            $('#uploadVideo').find('video').remove();
                           
                            $('#uploadVideo').append('<center><video src="' + fileContent + '" width="320" height="240" controls></video></center>');
                           
                        }
                        chunk += 500;
                    }, 500);
                }


                // Get the selected video from Dialog
                reader.readAsDataURL(this.files[0]);
                document.getElementById('SendVideo').style.display = "block";


            });






                var RateVideo = $("#RateVideo").val();
                var RateStar = $('#stars li').parent().children('li.star');
                var dReview = document.getElementById("review");
                for (i = 0; i < RateVideo; i++) {
                    $(RateStar[i]).addClass('selected');
                    $(RateStar[i]).addClass('disabled');
                }
                if (RateVideo > 0) {
                    dReview.style.display = "block";
                }
                else {
                    dReview.style.display = "none";
                }











                $("#unggahVideo").click(function (e) {
                    document.getElementById('uploadVideo').style.display = "block";
                    document.getElementById('btn-start-recording').style.display = "none";
                    document.getElementById('btn-stop-recording').style.display = "none";
                    document.getElementById('SendVideo').style.display = "none";

            });

            //$("#BtnSubmitDecline").click(function (e) {


            //    DeclineOrder($("#IdBook").val(), $("#TxtReason").val());


            //});








        });

        function myCopyorder() {
            var copyText = document.getElementById("myCopyorder");
            copyText.select();
            document.execCommand("copy");

            var tooltip = document.getElementById("myTooltiporder");
            tooltip.innerHTML = "Copied";
        }

        function outFuncorder() {
            var tooltip = document.getElementById("myTooltiporder");
            tooltip.innerHTML = "Copy to clipboard";
        }

    </script>
  
}



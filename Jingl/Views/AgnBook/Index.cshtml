@model IEnumerable<Jingl.General.Model.Admin.Transaction.BookModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout_Adm.cshtml";
}

<h2>Bookings</h2>

<style>
    .button {
        width: 60px;
    }
</style>

<!-- end page-header -->
<!-- begin panel -->
<div class="panel panel-inverse">
    <div class="panel-heading">
        <div class="panel-heading-btn">
        </div>
        <h4 class="panel-title">Bookings</h4>
    </div>
    <div class="panel-body">
        <p>
            Export
        </p>
        <table class="table table-striped table-bordered" id="data-table-buttons" style="width:100%" data-order='[[ 0, "desc" ]]'>
            <thead>
                <tr>
                    <th>
                        Action
                    </th>
                    <th>
                        Order No
                    </th>
                    <th>
                        Order Date
                    </th>
                    <th>
                        Talent Name
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Deadline)
                    </th>
                    <th>
                        Complete Date
                    </th>
                    <th>
                        Price per Video
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>



                </tr>
            </thead>
            <tbody>
                @*@foreach (var item in Model)
                {
                <tr>
                    <td>
                        @Html.ActionLink("Edit", "Edit", "AdmBook", new { id = item.Id }, new { @class = "btn btn-success m-b-5 button" })
                        @Html.ActionLink("Details", "Details", "AdmBook", new { id = item.Id }, new { @class = "btn btn-warning m-b-5 button" })
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger m-b-5 button" })

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.CreatedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Period)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.CategoryNm)
                    </td>
                    <td>
                      
                        @Html.ActionLink(item.CustomerName, "Details", "AdmUser", new { id = item.BookedBy }, new { target = "_blank", title = "Click To Detail Customer Name", style = "text-decoration:none;" })

                    </td>
                    <td>
                       
                        @Html.ActionLink(item.TalentNm, "Details", "AdmTalent", new { id = item.TalentId }, new { target = "_blank", title = "Click To Detail Talent", style = "text-decoration:none;" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Deadline)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderCompleteDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PriceAmount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentShare)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.SalePrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VoucherCode)
                    </td>
                    <td>
                        @{
                            if (item.TotalPay.HasValue)
                            {
                                <label class="amountlines">@Html.DisplayFor(modelItem => item.TotalPay)</label>
                            }
                        }

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PayMethod)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TransactionStatus)
                    </td>
                </tr>
                }*@
            </tbody>
        </table>
    </div>
</div>

@section scripts{

    <script type="text/javascript">
        $(document).ready(function () {
            App.init();

            function formatDate(date) {
                var d = new Date(date),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;

                return [day, month,year].join('-');
            }

            function formatDateTimeData(date) {
                var d = new Date(date),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear(),
                    hoursdata = d.getHours(),
                    minutesdata = d.getMinutes();



                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;

                if (hoursdata.length < 2)
                    hoursdata = '0' + hour;
                if (minutesdata.length < 2)
                    minutesdata = '0' + minute;

                var dateData = [day, month, year].join('-');

                var TimeData = [hoursdata, minutesdata].join(':');

                var datetimedata = dateData + '  ' + TimeData;

                return datetimedata;
            }



            //TableManageResponsive.init();
            var handleDataTableButtons = function () {
                "use strict";

                $.ajax({
                    url: '@Url.Action("GetListBook", "AgnBook")',
                    type: 'GET',
                    //data: { PONUmber: $("#Tx_PoNumber").val(), NoRangka: $("#Tx_NoRangka").val() },
                    success: function (result)
                    {
                        console.log(result);

                        $('#data-table-buttons thead tr').clone(true).appendTo('#data-table-buttons thead');
                        $('#data-table-buttons thead tr:eq(1) th').each(function (i) {
                            var title = $(this).text();
                            $(this).html('<input type="text" style="width:80px" placeholder="Search ' + title + '" />');

                            $('input', this).on('keyup change', function () {
                                if (table.column(i).search() !== this.value) {
                                    table
                                        .column(i)
                                        .search(this.value)
                                        .draw();
                                }
                            });
                        });

                        var table = $('#data-table-buttons').DataTable({
                            dom: 'Bfrtip',
                            buttons: [

                                { extend: 'csv', className: 'btn-sm' },
                                { extend: 'excel', className: 'btn-sm' }


                            ],
                            data: result,
                            columns:
                                [
                                    {
                                        "render": function (data, type, full, meta) {
                                            return `<a href="/AgnBook/Edit?id=${full.Id}" class="btn btn-success m-b-5 button">  Process  </a>`;

                                            //if (full.POStatus != "PO Cancel" && full.POStatus != "PO Complete" && full.POStatus != "Rejected") {
                                            //    return '<span >' + full.POStatus + '</span><br /><span style="color: darkviolet">BPKB Outstanding</span>';
                                            //} else {
                                            //    return '<span >' + full.POStatus + '</span><br />';
                                            //}
                                        }
                                    },
                                    { 'data': "OrderNo", "autowidth": true },
                                    //{ 'data': "CreatedDate", "autowidth": true },
                                    {
                                        "render": function (data, type, full, meta) {
                                            return `<span>${formatDate(full.CreatedDate)}</span>`;

                                        }
                                    },
                                //{ 'data': "TalentNm", "autowidth": true },
                                    {
                                        "render": function (data, type, full, meta) {
                                            return `<a href="/AgnTalent/Details?id=${full.TalentId}">${full.TalentNm}</a>`;

                                        }
                                    },
                               // { 'data': "Deadline", "autowidth": true },
                                    {
                                        "render": function (data, type, full, meta) {

                                            if (full.Deadline != null) {
                                                return `<span >${formatDateTimeData(full.Deadline)}</span>`;

                                            }
                                            else {
                                                return `<span></span>`;
                                            }
                                           
                                        }
                                    },

                                   // { 'data': "OrderCompleteDate", "autowidth": true },
                                    {
                                        "render": function (data, type, full, meta) {

                                            if (full.OrderCompleteDate != null) {
                                                return `<span >${formatDateTimeData(full.OrderCompleteDate)}</span>`;

                                            }
                                            else {
                                                return `<span></span>`;
                                            }

                                        }
                                    },

                                { 'data': "PriceAmount", "autowidth": true },
                                { 'data': "TransactionStatus", "autowidth": true },
                                //{ 'data': "OrderNo", "autowidth": true }
                                    ],
                        "deferRender":true,
                        //responsive: true,
                        "scrollY": "500px",
                        "scrollX": true,
                        // "scrollCollapse": true,
                       // "paging": false,
                        orderCellsTop: true,
                        fixedHeader: true
                    });



                    }
                    });


            };

            var TableManageButtons = function () {
                "use strict";
                return {
                    //main function
                    init: function () {
                        handleDataTableButtons();
                    }
                };
            }();

            TableManageButtons.init();

        });
    </script>
}
